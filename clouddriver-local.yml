kubernetes:
  enabled: true
  accounts:
  - name: "dev-account"
    liveManifestCalls: true
    requiredGroupMembership: []
    providerVersion: "v2"
    permissions: {}
    dockerRegistries: []
    kubeconfigFile: "configserver:kubeCfg_dev-account"
    configureImagePullSecrets: true
    serviceAccount: false
    cacheThreads: 1
    namespaces:
    - "deploy-dev"
    omitNamespaces: []
    kinds: []
    omitKinds:
    - "podPreset"
    customResources: []
    cachingPolicies: []
    onlySpinnakerManaged: true
    checkPermissionsOnStartup: false
  - name: "default"
    liveManifestCalls: true
    requiredGroupMembership: []
    providerVersion: "v2"
    permissions: {}
    dockerRegistries: []
    kubeconfigFile: "configserver:kubeCfg_default"
    configureImagePullSecrets: true
    serviceAccount: false
    cacheThreads: 1
    namespaces:
    - "stg"
    omitNamespaces: []
    kinds: []
    omitKinds:
    - "podPreset"
    customResources: []
    cachingPolicies: []
    onlySpinnakerManaged: true
    checkPermissionsOnStartup: false
  - name: "qa-account"
    liveManifestCalls: true
    requiredGroupMembership: []
    providerVersion: "v2"
    permissions: {}
    dockerRegistries: []
    kubeconfigFile: "configserver:kubeCfg_qa-account"
    configureImagePullSecrets: true
    serviceAccount: false
    cacheThreads: 1
    namespaces:
    - "deploy-qa"
    omitNamespaces: []
    kinds: []
    omitKinds:
    - "podPreset"
    customResources: []
    cachingPolicies: []
    onlySpinnakerManaged: true
    checkPermissionsOnStartup: false
  - name: "staging-account"
    liveManifestCalls: true
    requiredGroupMembership: []
    providerVersion: "v2"
    permissions: {}
    dockerRegistries: []
    kubeconfigFile: "configserver:kubeCfg_staging-account"
    configureImagePullSecrets: true
    serviceAccount: false
    cacheThreads: 1
    namespaces:
    - "deploy-staging"
    omitNamespaces: []
    kinds: []
    omitKinds:
    - "podPreset"
    customResources: []
    cachingPolicies: []
    onlySpinnakerManaged: true
    checkPermissionsOnStartup: false
  - name: "prod-account"
    liveManifestCalls: true
    requiredGroupMembership: []
    providerVersion: "v2"
    permissions: {}
    dockerRegistries: []
    kubeconfigFile: "configserver:kubeCfg_prod-account"
    configureImagePullSecrets: true
    serviceAccount: false
    cacheThreads: 1
    namespaces:
    - "deploy-prod"
    omitNamespaces: []
    kinds: []
    omitKinds:
    - "podPreset"
    customResources: []
    cachingPolicies: []
    onlySpinnakerManaged: true
    checkPermissionsOnStartup: false
  - name: "akhil-cloud"
    liveManifestCalls: true
    requiredGroupMembership: []
    providerVersion: "v2"
    permissions: {}
    dockerRegistries: []
    kubeconfigFile: "configserver:kubeCfg_akhil-cloud"
    configureImagePullSecrets: true
    serviceAccount: false
    cacheThreads: 1
    namespaces: []
    omitNamespaces:
    - "opsmx-isd"
    - "cert-manager"
    - "default"
    kinds: []
    omitKinds:
    - "podPreset"
    customResources: []
    cachingPolicies: []
    onlySpinnakerManaged: true
    checkPermissionsOnStartup: false
  - name: "k8s-test"
    liveManifestCalls: true
    requiredGroupMembership: []
    providerVersion: "v2"
    permissions: {}
    dockerRegistries: []
    kubeconfigFile: "configserver:kubeCfg_k8s-test"
    configureImagePullSecrets: true
    serviceAccount: false
    cacheThreads: 1
    namespaces:
    - "stg"
    omitNamespaces: []
    kinds: []
    omitKinds:
    - "podPreset"
    customResources: []
    cachingPolicies: []
    onlySpinnakerManaged: true
    checkPermissionsOnStartup: false
  - name: "k8s-config"
    liveManifestCalls: true
    requiredGroupMembership: []
    providerVersion: "v2"
    permissions: {}
    dockerRegistries: []
    kubeconfigFile: "configserver:kubeCfg_k8s-config"
    configureImagePullSecrets: true
    serviceAccount: false
    cacheThreads: 1
    namespaces:
    - "stg"
    omitNamespaces: []
    kinds: []
    omitKinds:
    - "podPreset"
    customResources: []
    cachingPolicies: []
    onlySpinnakerManaged: true
    checkPermissionsOnStartup: false
